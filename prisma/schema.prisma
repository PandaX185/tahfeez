// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Manager {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  phone     String    @unique
  password  String
  students  Student[]
  createdAt DateTime  @default(now())
}

model Teacher {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  phone     String    @unique
  password  String
  students  Student[]
  createdAt DateTime  @default(now())
}

model Student {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  teacherId String   @db.ObjectId
  name      String
  phone     String
  password  String
  level     Int
  birthDate String
  createdAt DateTime @default(now())
  Teacher   Teacher  @relation(fields: [teacherId], references: [id])
  Manager   Manager? @relation(fields: [managerId], references: [id])
  managerId String?  @db.ObjectId

  @@unique([teacherId, phone])
}

type Surah {
  name         String
  startingAyah Int
  endingAyah   Int
}

enum Status {
  PENDING
  PASSED
  REVISION
  FAILED
}

model Assignment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  teacherId String   @db.ObjectId
  studentId String   @db.ObjectId
  surahs    Surah[]
  status    Status
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Note {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  assignmentId String   @unique @db.ObjectId
  content      String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
